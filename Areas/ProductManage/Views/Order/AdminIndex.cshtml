@model List<App.Models.Orders.OrderModel>
@{
    ViewData["Title"] = "Qu·∫£n l√Ω ƒë∆°n h√†ng";
    Layout = "_LayoutAdmin";
}

<div class="app-content-header">
    <div class="container-fluid">
        <h1 class="">üì¶ Qu·∫£n l√Ω ƒë∆°n h√†ng </h1>
    </div>
</div>
<div class="app-content">
    <div class="container-fluid">
        <form method="get" class="form-inline mb-3">
            @Html.AntiForgeryToken()
            <label class="mr-2">Tr·∫°ng th√°i:</label>
            <select name="statusFilter" class="form-control mr-3">
                <option value="">-- T·∫•t c·∫£ --</option>
                <option value="Pending" selected="@(ViewBag.StatusFilter == "Pending")">Ch·ªù x·ª≠ l√Ω</option>
                <option value="Processing" selected="@(ViewBag.StatusFilter == "Processing")">ƒêang x·ª≠ l√Ω</option>
                <option value="Completed" selected="@(ViewBag.StatusFilter == "Completed")">Ho√†n t·∫•t</option>
            </select>

            <label class="mr-2">Thanh to√°n:</label>
            <select name="isPaid" class="form-control mr-3">
                <option value="">-- T·∫•t c·∫£ --</option>
                <option value="true" selected="@(ViewBag.IsPaid?.ToString() == "True")">ƒê√£ thanh to√°n</option>
                <option value="false" selected="@(ViewBag.IsPaid?.ToString() == "False")">Ch∆∞a thanh to√°n</option>
            </select>

            <button type="submit" class="btn btn-primary mt-2">L·ªçc</button>
        </form>

        <table class="table table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th>M√£ ƒë∆°n</th>
                    <th>Kh√°ch h√†ng</th>
                    <th>Ng√†y ƒë·∫∑t</th>
                    <th>Tr·∫°ng th√°i</th>
                    <th>Lo·∫°i thanh to√°n</th> 
                    <th>Thanh to√°n</th>
                    <th>T·ªïng ti·ªÅn</th>
                    <th>Chi ti·∫øt</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var order in Model)
                {
                    <tr>
                        <td>@order.Id</td>
                        <td>@order.User?.UserName</td>
                        <td>@order.OrderDate.ToString("dd/MM/yyyy HH:mm")</td>
                        <td>
                            <select class="form-control status-select" data-id="@order.Id">
                                <option value="Pending" selected="@(order.Status == "Pending")">Ch·ªù x·ª≠ l√Ω</option>
                                <option value="Processing" selected="@(order.Status == "Processing")">ƒêang x·ª≠ l√Ω</option>
                                <option value="Completed" selected="@(order.Status == "Completed")">Ho√†n t·∫•t</option>
                            </select>
                        </td>
                        <td>
                            @order.PaymentMethod
                        </td>
                        <td>
                            <button class="btn btn-sm @(order.IsPaid ? "btn-success" : "btn-warning") toggle-paid"
                                data-id="@order.Id">
                                @(order.IsPaid ? "ƒê√£ thanh to√°n" : "Ch∆∞a thanh to√°n")
                            </button>
                        </td>
                        <td>@order.TotalAmount.ToString("n0") ƒë</td>
                        <td>
                            <a asp-action="Details" asp-route-id="@order.Id" class="btn btn-sm btn-info">Xem</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
@section Scripts {
    <script>
        $(document).ready(function () {
            var token = $('input[name="__RequestVerificationToken"]').val();

            // C·∫≠p nh·∫≠t tr·∫°ng th√°i ƒë∆°n h√†ng
            $(".status-select").change(function () {
                var orderId = $(this).data("id");
                var newStatus = $(this).val();
                $.ajax({
                    url: '@Url.Action("UpdateStatus", "Order", new { area = "ProductManage" })',
                    type: 'POST',
                    data: { id: orderId, status: newStatus },
                    headers: {
                        'RequestVerificationToken': token
                    },
                    success: function (result) {
                        // C√≥ th·ªÉ th√™m th√¥ng b√°o th√†nh c√¥ng ·ªü ƒë√¢y n·∫øu mu·ªën
                        console.log("Status updated successfully for order " + orderId);
                    },
                    error: function (xhr, status, error) {
                        // X·ª≠ l√Ω l·ªói (v√≠ d·ª•: hi·ªÉn th·ªã th√¥ng b√°o)
                        console.error("Error updating status:", status, error);
                        alert("C√≥ l·ªói x·∫£y ra khi c·∫≠p nh·∫≠t tr·∫°ng th√°i.");
                    }
                });
            });

            // Toggle tr·∫°ng th√°i thanh to√°n
            $(".toggle-paid").click(function () {
                var btn = $(this);
                var orderId = btn.data("id");
                $.ajax({
                    url: '@Url.Action("TogglePaid", "Order", new { area = "ProductManage" })',
                    type: 'POST',
                    data: { id: orderId },
                    headers: {
                        'RequestVerificationToken': token
                    },
                    success: function (result) {
                        // Reload l·∫°i trang ƒë·ªÉ th·∫•y thay ƒë·ªïi
                        location.reload();
                    },
                    error: function (xhr, status, error) {
                        // X·ª≠ l√Ω l·ªói
                        console.error("Error toggling paid status:", status, error);
                        alert("C√≥ l·ªói x·∫£y ra khi thay ƒë·ªïi tr·∫°ng th√°i thanh to√°n.");
                    }
                });
            });
        });
    </script>
}
