@using Microsoft.EntityFrameworkCore
@using System.Data
@using App.Models
@inject AppDbContext dbContext

@{
    ViewData["Title"] = "THÔNG TIN CỦA DATABASE";
    var connect = dbContext.Database.GetDbConnection();
    var dbName = connect.Database;
    var canConnect = dbContext.Database.CanConnect();
}

<partial name="_AlertMessage" />
<h1> THÔNG TIN </h1>
<p>- Database: @dbName</p>
<p>- Source: @connect.DataSource</p>
<p>- State:- @connect.State</p>
<h2>Migrations</h2>
@foreach (var migration in dbContext.Database.GetMigrations())
{
    <p>@migration</p>
}
<h2>Pending:</h2>
@foreach (var migration in dbContext.Database.GetPendingMigrations())
{
    <p>@migration (Pending)</p>
}

@if (!canConnect)
{
    <p class="alert alert-dagger">Không thể kết nối đến Database</p>
}
@if (dbContext.Database.GetPendingMigrations().Any())
{
    <form method="post">
        <button class="btn btn-success" asp-action="Migrate"> Tạo Database hoặc cập nhập database</button>
    </form>
    
    
}
@if (canConnect)
{
    <h2>Các table</h2>
    await dbContext.Database.OpenConnectionAsync();
    var table = dbContext.Database.GetDbConnection().GetSchema("Tables");
    <ul>
        @foreach (DataRow row in table.Rows)
        {
            <p>@row["TABLE_NAME"]</p>
        }
    </ul>
    <a class="btn btn-danger" asp-action="DeleteDb"> Xóa Database: @dbName</a>
    <a class="btn btn-danger" asp-action="SeedData"> SeedData</a>
}